// src/components/layout/Navigation.jsx
import React from 'react';
import Link from 'next/link';
import { useRouter } from 'next/router';

const Navigation = ({ mobile = false, setIsMobileMenuOpen = () => {} }) => {
  const router = useRouter();
  
  const links = [
    { text: 'Home', href: '/' },
    { 
      text: 'Services', 
      href: '/services',
      dropdown: [
        { text: 'Network Infrastructure', href: '/services/network-infrastructure' },
        { text: 'WiFi Solutions', href: '/services/wifi-solutions' },
        { text: 'Office Relocations', href: '/services/office-relocations' },
        { text: 'Managed IT Services', href: '/services/managed-it-services' },
      ]
    },
    { text: 'Case Studies', href: '/case-studies' },
    { text: 'About', href: '/about' },
    { text: 'Contact', href: '/contact' },
  ];
  
  const handleClick = (href) => {
    if (mobile) {
      setIsMobileMenuOpen(false);
    }
    router.push(href);
  };

  if (mobile) {
    return (
      <nav className="flex flex-col space-y-4">
        {links.map((link) => (
          <React.Fragment key={link.text}>
            {link.dropdown ? (
              <>
                <div className="font-medium">{link.text}</div>
                <div className="pl-4 flex flex-col space-y-2">
                  {link.dropdown.map((subLink) => (
                    <button
                      key={subLink.href}
                      className={`text-left ${router.pathname === subLink.href ? 'text-primary' : 'text-gray-600'}`}
                      onClick={() => handleClick(subLink.href)}
                    >
                      {subLink.text}
                    </button>
                  ))}
                </div>
              </>
            ) : (
              <button
                className={`text-left font-medium ${router.pathname === link.href ? 'text-primary' : 'text-gray-800'}`}
                onClick={() => handleClick(link.href)}
              >
                {link.text}
              </button>
            )}
          </React.Fragment>
        ))}
      </nav>
    );
  }
  
  return (
    <nav className="flex items-center space-x-8">
      {links.map((link) => (
        <div key={link.text} className="relative group">
          {link.dropdown ? (
            <>
              <div 
                className={`cursor-pointer flex items-center font-medium ${
                  router.pathname.startsWith(link.href) ? 'text-primary' : 'text-gray-800'
                } hover:text-primary transition-colors duration-300`}
              >
                {link.text}
                <svg className="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                </svg>
              </div>
              <div className="absolute left-0 mt-2 w-60 bg-white shadow-lg rounded-md overflow-hidden z-50 transform opacity-0 scale-95 group-hover:opacity-100 group-hover:scale-100 transition duration-200 origin-top invisible group-hover:visible">
                {link.dropdown.map((subLink) => (
                  <Link key={subLink.href} href={subLink.href}>
                    <a className={`block px-4 py-2 hover:bg-primary-light ${
                      router.pathname === subLink.href ? 'text-primary' : 'text-gray-700'
                    }`}>
                      {subLink.text}
                    </a>
                  </Link>
                ))}
              </div>
            </>
          ) : (
            <Link href={link.href}>
              <a className={`font-medium ${
                router.pathname === link.href ? 'text-primary' : 'text-gray-800'
              } hover:text-primary transition-colors duration-300`}>
                {link.text}
              </a>
            </Link>
          )}
        </div>
      ))}
    </nav>
  );
};

export default Navigation;
